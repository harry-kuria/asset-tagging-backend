# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
*.tfplan
*.tfvars
!terraform.tfvars.example

# Terraform backend
*.tfstate.backup
*.tfstate.backup.*

# Local .terraform directories
**/.terraform/*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Docker
.dockerignore
docker-compose.override.yml

# Environment files
.env
.env.local
.env.production
.env.staging

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
tmp/
temp/

# OS files
.DS_Store
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Backup files
*.backup
*.bak
backup/
backups/

# Deployment outputs
deployment_outputs.json

# SSH keys
*.pem
*.key
id_rsa
id_rsa.pub

# AWS credentials
.aws/
credentials

# Monitoring data
prometheus_data/
grafana_data/

# Application data
assetLogos/
files/
LicenseKey/

# SSL certificates
*.crt
*.pem
*.key
ssl/

# Node modules (if any)
node_modules/
package-lock.json

# Python
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
.venv/
pip-log.txt
pip-delete-this-directory.txt

# Go
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
go.work
go.work.sum
